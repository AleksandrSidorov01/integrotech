/**
 * ============================================
 * –°–ò–°–¢–ï–ú–ê –í–°–ü–õ–´–í–ê–Æ–©–ò–• –£–í–ï–î–û–ú–õ–ï–ù–ò–ô (TOAST)
 * ============================================
 * 
 * –ö–ª–∞—Å—Å ToastManager —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ–º, –ø–æ–∫–∞–∑–æ–º –∏ —Å–∫—Ä—ã—Ç–∏–µ–º
 * –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞.
 * 
 * –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
 * - –†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (success, error, info, warning)
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
 * - –†—É—á–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É
 * - –ê–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è –∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
 * - –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π –≤—Ä–µ–º—è –¥–æ –∞–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏—è
 * - –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–¥ –º–æ–±–∏–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
 * 
 * –ê–≤—Ç–æ—Ä: –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ "–ò–Ω—Ç–µ–≥—Ä–æ—Ç–µ—Ö"
 * –î–∞—Ç–∞: 2025
 */

class ToastManager {
    constructor() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        this.container = null;
        this.toasts = new Map(); // –•—Ä–∞–Ω–∏–ª–∏—â–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        this.toastCounter = 0; // –°—á–µ—Ç—á–∏–∫ –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
        this.init();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     * –°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è toast-–æ–≤ –≤ DOM
     */
    init() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        this.container = document.querySelector('.toast-container');
        
        if (!this.container) {
            // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            this.container = document.createElement('div');
            this.container.className = 'toast-container';
            document.body.appendChild(this.container);
        }
    }

    /**
     * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     * @param {string} type - –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (success, error, info, warning)
     * @param {string} title - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
     */
    show(type, title, message, options = {}) {
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        const config = {
            duration: options.duration || 5000, // –í—Ä–µ–º—è –ø–æ–∫–∞–∑–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
            closable: options.closable !== false, // –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–∫—Ä—ã—Ç—å –≤—Ä—É—á–Ω—É—é
            progress: options.progress !== false, // –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
            sound: options.sound || false, // –ó–≤—É–∫–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            actions: options.actions || [], // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
            ...options
        };

        // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const toastId = ++this.toastCounter;
        
        // –°–æ–∑–¥–∞–µ–º DOM —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const toastElement = this.createToastElement(type, title, message, config);
        toastElement.setAttribute('data-toast-id', toastId);

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        this.container.appendChild(toastElement);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        this.toasts.set(toastId, {
            element: toastElement,
            config: config,
            timeout: null
        });

        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            toastElement.classList.add('show');
        }, 10);

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ
        if (config.duration > 0) {
            this.scheduleAutoClose(toastId, config.duration);
        }

        // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω
        if (config.sound) {
            this.playNotificationSound(type);
        }

        return toastId;
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ DOM —ç–ª–µ–º–µ–Ω—Ç–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     * @param {string} type - –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     * @param {string} title - –ó–∞–≥–æ–ª–æ–≤–æ–∫
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
     * @param {Object} config - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
     * @returns {HTMLElement} - DOM —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     */
    createToastElement(type, title, message, config) {
        // –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —ç–ª–µ–º–µ–Ω—Ç
        const toast = document.createElement('div');
        toast.className = `toast ${type}`;

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        const icons = {
            success: '‚úÖ',
            error: '‚ùå', 
            info: '‚ÑπÔ∏è',
            warning: '‚ö†Ô∏è'
        };

        // –§–æ—Ä–º–∏—Ä—É–µ–º HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        toast.innerHTML = `
            <div class="toast-icon">${icons[type] || 'üì¢'}</div>
            <div class="toast-content">
                <div class="toast-title">${title}</div>
                ${message ? `<div class="toast-message">${message}</div>` : ''}
            </div>
            ${config.closable ? '<button class="toast-close" aria-label="–ó–∞–∫—Ä—ã—Ç—å">&times;</button>' : ''}
            ${config.progress ? '<div class="toast-progress"></div>' : ''}
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
        if (config.closable) {
            const closeBtn = toast.querySelector('.toast-close');
            closeBtn.addEventListener('click', () => {
                const toastId = parseInt(toast.getAttribute('data-toast-id'));
                this.hide(toastId);
            });
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –≤—Å–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—é (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        if (config.onClick) {
            toast.style.cursor = 'pointer';
            toast.addEventListener('click', (e) => {
                if (!e.target.classList.contains('toast-close')) {
                    config.onClick();
                }
            });
        }

        return toast;
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     * @param {number} toastId - ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     * @param {number} duration - –í—Ä–µ–º—è –¥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
     */
    scheduleAutoClose(toastId, duration) {
        const toast = this.toasts.get(toastId);
        
        if (toast) {
            toast.timeout = setTimeout(() => {
                this.hide(toastId);
            }, duration);
        }
    }

    /**
     * –°–∫—Ä—ã—Ç–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     * @param {number} toastId - ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è
     */
    hide(toastId) {
        const toast = this.toasts.get(toastId);
        
        if (!toast) return;

        // –û—Ç–º–µ–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ
        if (toast.timeout) {
            clearTimeout(toast.timeout);
        }

        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å–∫—Ä—ã—Ç–∏—è
        toast.element.classList.add('hide');
        
        // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            if (toast.element.parentNode) {
                toast.element.parentNode.removeChild(toast.element);
            }
            this.toasts.delete(toastId);
        }, 300);
    }

    /**
     * –°–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     */
    hideAll() {
        this.toasts.forEach((toast, toastId) => {
            this.hide(toastId);
        });
    }

    /**
     * –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     * @param {string} type - –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –∑–≤—É–∫–∞
     */
    playNotificationSound(type) {
        // –°–æ–∑–¥–∞–µ–º –∞—É–¥–∏–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –≤–µ–±-–∞—É–¥–∏–æ
        if (typeof AudioContext !== 'undefined' || typeof webkitAudioContext !== 'undefined') {
            try {
                const audioContext = new (AudioContext || webkitAudioContext)();
                const oscillator = audioContext.createOscillator();
                const gainNode = audioContext.createGain();

                // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–≤—É–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
                const soundConfig = {
                    success: { frequency: 800, duration: 200 },
                    error: { frequency: 300, duration: 300 },
                    info: { frequency: 600, duration: 150 },
                    warning: { frequency: 500, duration: 250 }
                };

                const config = soundConfig[type] || soundConfig.info;

                oscillator.connect(gainNode);
                gainNode.connect(audioContext.destination);

                oscillator.frequency.value = config.frequency;
                gainNode.gain.value = 0.1;

                oscillator.start();
                oscillator.stop(audioContext.currentTime + config.duration / 1000);
            } catch (e) {
                console.warn('Web Audio API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:', e);
            }
        }
    }

    // ==========================================
    // –£–î–û–ë–ù–´–ï –ú–ï–¢–û–î–´ –î–õ–Ø –†–ê–ó–õ–ò–ß–ù–´–• –¢–ò–ü–û–í –£–í–ï–î–û–ú–õ–ï–ù–ò–ô
    // ==========================================

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
     * @param {string} title - –ó–∞–≥–æ–ª–æ–≤–æ–∫
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
     * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
     */
    success(title, message = '', options = {}) {
        return this.show('success', title, message, {
            duration: 4000,
            ...options
        });
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     * @param {string} title - –ó–∞–≥–æ–ª–æ–≤–æ–∫
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
     * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
     */
    error(title, message = '', options = {}) {
        return this.show('error', title, message, {
            duration: 6000,
            sound: true,
            ...options
        });
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     * @param {string} title - –ó–∞–≥–æ–ª–æ–≤–æ–∫
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
     * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
     */
    info(title, message = '', options = {}) {
        return this.show('info', title, message, {
            duration: 5000,
            ...options
        });
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
     * @param {string} title - –ó–∞–≥–æ–ª–æ–≤–æ–∫
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
     * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
     */
    warning(title, message = '', options = {}) {
        return this.show('warning', title, message, {
            duration: 5000,
            ...options
        });
    }
}

// ============================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ì–õ–û–ë–ê–õ–¨–ù–û–ì–û –≠–ö–ó–ï–ú–ü–õ–Ø–†–ê
// ============================================

/**
 * –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä ToastManager
 * –î–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ window.toast –≤–æ –≤—Å–µ—Ö —á–∞—Å—Ç—è—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
window.ToastManager = ToastManager;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    if (!window.toast) {
        window.toast = new ToastManager();
        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –º–æ–¥—É–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
if (typeof module !== 'undefined' && module.exports) {
    module.exports = ToastManager;
}